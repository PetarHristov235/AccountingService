plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.13.0'
    id 'jacoco'

}
def appName = 'accounting-demo-project'
def version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

bootJar {
    archiveBaseName.set(appName)
    archiveVersion.set(version.strip())
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.30'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'io.swagger.core.v3:swagger-models:2.2.30'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.2.0'
    implementation 'org.flywaydb:flyway-core:10.14.0'
    runtimeOnly 'org.flywaydb:flyway-database-postgresql:11.9.0'
    compileOnly 'org.projectlombok:lombok'
    compileOnly "javax.servlet:servlet-api:2.5"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.postgresql:postgresql:42.7.3'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor("org.mapstruct:mapstruct-processor:1.6.3")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
    testImplementation 'org.testcontainers:postgresql:1.19.7'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/openapi/src/main/java"
        }
    }
}

springBoot {
    mainClass = 'com.accounting.demo.AccountingApplication'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/spec/openapi.yaml"
    outputDir = layout.buildDirectory.dir("generated/openapi").get().asFile.path
    apiPackage = "com.accounting.demo.api"
    modelPackage = "com.accounting.demo.model"
    configOptions = [
             useTags        : "true",
             delegatePattern: "true",
             javaVersion    : "17",
             useSpringBoot3 : "true",
             dateLibrary    : "java8",
             library        : "spring-boot",
             interfaceOnly  : "false"
    ]
}

tasks.named('compileJava') {
    dependsOn tasks.openApiGenerate
}
tasks.named('test') {
    useJUnitPlatform()
}

test {
    enabled = false
}

jacocoTestReport {
    dependsOn test  // ensure tests run before report
    reports {
        xml.required = true
        html.required = true
    }
}
